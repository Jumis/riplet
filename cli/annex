#!/bin/bash

### CLI Tools. 
PREV=$(pwd);
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
CMD=$1;

### Env.
NAME=$("$DIR/branch");

TARGET="ubuntu";
BASEDIR="/root";
OUTDIR="/tmp";

NAME=${1-"$NAME"};
TARGET=${2-"$TARGET"};
BASEDIR=${3-"$BASEDIR"};

### Riplet (ripl) annex
if [ "$NAME" = "master" ]; then
echo "annex <package> [target] [basedir]";
echo "example: annex branch ubuntu /root";
else

if [ "1" = "1" ]; then
### Dependencies

ACTION="build";
APT="/riplet/service/$NAME/$TARGET/$ACTION.apt";
DEPS="/riplet/annex/ubuntu";
DEPS=$(mktemp -d);

DEPS_SCRIPT=$(<<EOF
mv /var/cache/apt/archives /var/cache/apt/archives-orig
ln -s /riplet/annex/ubuntu /var/cache/apt/archives
apt-get -d install \$(cat $APT)
EOF
);

ANNEX_SCRIPT=$(cat <<EOF
docker run -cidfile $DEPS/$NAME.docker -v $BASEDIR:/riplet:rw -e RIPLET_HOME=/riplet foldersio-dev /bin/bash -c "$DEPS_SCRIPT";
EOF
);

echo "$ANNEX_SCRIPT" > $DEPS/$NAME.sh;

echo $DEPS/$NAME.sh;

fi;


if [ "0" = "1" ]; then
### Base.

TEMP=`mktemp -d`;

BUILD_SCRIPT=$(cat <<EOF
mkdir -p /build/bin/$NAME;
/riplet/service/$NAME/$TARGET/build > /build/bin/$NAME/build.log 2>&1;
/riplet/service/$NAME/$TARGET/package > /build/bin/$NAME/package.log 2>&1;
EOF
);

ANNEX_SCRIPT=$(cat <<EOF
docker run -cidfile $TEMP/$NAME.docker -v $BASEDIR:/riplet:ro -e RIPLET_HOME=/riplet foldersio-dev /bin/bash -c "$BUILD_SCRIPT";
docker cp \$(cat $TEMP/$NAME.docker):/build/bin/$NAME $TEMP;
docker rm \$(cat $TEMP/$NAME.docker) > /dev/null 2>&1;
git bundle create $TEMP/$NAME.git --branches > /dev/null 2>&1;
EOF
);

echo "$ANNEX_SCRIPT" > $TEMP/$NAME.sh;

echo $TEMP/$NAME.sh;

fi;

fi;

